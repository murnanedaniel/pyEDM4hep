name: Python Package CI

on:
  push:
    branches: [ "main", "develop" ] # Or your primary branches
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test] # Assumes test dependencies are specified in setup.py or pyproject.toml
        pip install pytest pytest-cov

    - name: Test with pytest
      run: |
        pytest --cov=pyedm4hep --cov-report=xml --cov-report=term-missing tests/

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # Optional: if you use Codecov
        fail_ci_if_error: true

  # Optional: Job to build and publish to PyPI
  # publish-to-pypi:
  #   needs: build-and-test # Run only if tests pass
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags') # Only run on new tags
  #   permissions:
  #     contents: read
  #     id-token: write # For trusted publishing
  #   steps:
  #   - uses: actions/checkout@v3
  #
  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.x' # Use a recent Python version for building
  #
  #   - name: Install build dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install build
  #
  #   - name: Build package
  #     run: python -m build
  #
  #   - name: Publish package to PyPI
  #     uses: pypa/gh-action-pypi-publish@release/v1
      # with:
      #   user: __token__
      #   password: ${{ secrets.PYPI_API_TOKEN }} # Store your PyPI token as a GitHub secret 